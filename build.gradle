buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.2.0"
    }
    ext {
        jacocoToolVersion = '0.8.3'
    }
}

// top level jacoco and coveralls plugins is used for multi module projects summary
plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = jacocoToolVersion
}

version = '0.0.2' + System.env.VERSION_SCOPE

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'jacoco'
    apply plugin: 'de.marcphilipp.nexus-publish'
    apply plugin: 'signing'

    jacoco {
        toolVersion = jacocoToolVersion
    }

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    group = 'com.github.leeonky'
    version = rootProject.version + System.env.VERSION_SCOPE
    sourceCompatibility = 1.8

    dependencies {
        implementation 'org.skyscreamer:jsonassert:1.5.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testImplementation 'org.assertj:assertj-core:3.10.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
        testAnnotationProcessor('org.projectlombok:lombok:1.18.4')
        testCompile('org.projectlombok:lombok:1.18.4')
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from(components.java)
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = rootProject.name
                    description = rootProject.name
                    url = 'https://github.com/leeonky/' + rootProject.name

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'leeonky'
                            name = 'Liangchen'
                            email = 'leeonky@gmail.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:https://github.com/leeonky/' + rootProject.name + '.git'
                        developerConnection = 'scm:git:git@github.com:leeonky' + rootProject.name + '.git'
                        url = 'https://github.com/leeonky/' + rootProject.name + '.git'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    nexusPublishing {
        username = System.env.ossrhUsername
        password = System.env.ossrhPassword
    }
}

def publishedProjects = subprojects.findAll()
task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'

    dependsOn(publishedProjects.test)

    additionalSourceDirs = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(publishedProjects.sourceSets.main.output)
    executionData = files(publishedProjects.jacocoTestReport.executionData)

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    dependsOn jacocoRootReport
}

task currentVersion {
    doLast {
        println rootProject.version
    }
}
